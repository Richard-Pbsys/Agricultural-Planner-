@page "/system-settings/farm/racks"
@using VHS.Services.Farming
@using VHS.Services.Farming.DTO
@using VHS.Client.Services.Farming
@using VHS.Client.Pages.Settings.Farming
@inject RackClientService RackClientService
@inject ISnackbar Snackbar

<FarmSettings>
    <MudDataGrid Items="@RackList" Hover="true" Loading="@IsLoading" LoadingProgressColor="Color.Info">
        <ToolBarContent>
            <MudText Typo="Typo.h5" Color="Color.Default">Racks</MudText>
            <MudSpacer />
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.Name" Title="Name" Sortable="true" />
            <PropertyColumn Property="x => x.TypeName" Title="Type" Sortable="true" />
            <PropertyColumn Property="x => x.Floor.Name" Title="Floor" Sortable="true" />
            <PropertyColumn Property="x => x.LayerCount" Title="Layers" Sortable="true" />
            <PropertyColumn Property="x => x.TrayCountPerLayer" Title="Depth" Sortable="true" />
            <PropertyColumn Property="x => x.AmountOfRacks" Title="Amount Of Racks" Sortable="true" />
            <TemplateColumn Title="Enabled" Sortable="true">
                <CellTemplate Context="context">
                    <MudChip Color="@(context.Item.Enabled ? Color.Success : Color.Error)" Label="true" Variant="Variant.Outlined" Size="Size.Medium">
                        @(context.Item.Enabled ? "Yes" : "No")
                    </MudChip>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager Items="@RackList" />
        </PagerContent>
    </MudDataGrid>
    @if (RackList == null || !RackList.Any())
    {
        <MudAlert Severity="Severity.Info">No racks found.</MudAlert>
    }
</FarmSettings>

@code {
    private IEnumerable<RackDTO>? RackList;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadRacks();
    }

    private async Task LoadRacks()
    {
        IsLoading = true;
        RackList = await RackClientService.GetAllRacksAsync();
        IsLoading = false;
    }
}
