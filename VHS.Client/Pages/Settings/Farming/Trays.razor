@page "/system-settings/farm/trays"
@using VHS.Services.Farming.DTO
@using VHS.Client.Services.Farming
@using VHS.Services.Common
@using VHS.Services.Common.DataGrid
@using VHS.Services.Common.DataGrid.Enums
@inject TrayClientService TrayClientService
@inject ISnackbar Snackbar

<FarmSettings>
    <MudDataGrid @ref="dataGrid" T="TrayDTO" ServerData="LoadTrayData">
        <ToolBarContent>
            <MudText Typo="Typo.h5" Color="Color.Default">Trays</MudText>
            <MudSpacer />
            <MudSelect T="Guid" Label="Select Tray Status" Variant="Variant.Outlined" Value="@SelectedTrayStatus" ValueChanged="OnTrayStatusChanged">
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_EMPTY">Empty</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_SEEDED">Seeded</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_GERMINATING">Germinating</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_PROPAGATING">Propagating</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_REPLANTED">Replanted</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_GROWING">Growing</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_FULLYGROWN">Fully Grown</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_TOHARVESTING">To Harvesting</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_HARVESTED">Harvested</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_TOWASHING">To Washing</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_WASHED">Washed</MudSelectItem>
                <MudSelectItem Value="@GlobalConstants.TRAYPHASE_INFEEDER">In Feeder</MudSelectItem>
            </MudSelect>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.RFIDTag" Title="RFID Tag" Sortable="true" />
            <PropertyColumn Property="x => x.Status" Title="Status" Sortable="true" />
        </Columns>
        <PagerContent>
            <MudDataGridPager Items="@TrayList" />
        </PagerContent>
    </MudDataGrid>
    @if (!TrayList.Any())
    {
        <MudAlert Severity="Severity.Info">No trays found.</MudAlert>
    }
</FarmSettings>

@code {
    private MudDataGrid<TrayDTO> dataGrid = new();
    private Guid SelectedTrayStatus { get; set; } = GlobalConstants.TRAYPHASE_EMPTY;
    private List<TrayDTO> TrayList = new();
    private int TotalTrayCount;
    private bool IsLoading;

    protected override async Task OnInitializedAsync()
    {
        SelectedTrayStatus = GlobalConstants.TRAYPHASE_EMPTY;
        await dataGrid.ReloadServerData();
    }

    private async Task<GridData<TrayDTO>> LoadTrayData(GridState<TrayDTO> state)
    {
        if (SelectedTrayStatus == Guid.Empty)
        {
            return new GridData<TrayDTO> { Items = new List<TrayDTO>(), TotalItems = 0 };
        }

        IsLoading = true;
        var sortDefinition = state.SortDefinitions.FirstOrDefault();
        var sortLabel = sortDefinition?.SortBy ?? nameof(TrayDTO.RFIDTag);
        var sortDirection = (sortDefinition?.Descending ?? false)
            ? SortDirectionEnum.Descending
            : SortDirectionEnum.Ascending;

        var response = await TrayClientService.GetTraysByStatusAsync(
            SelectedTrayStatus,
            state.Page,
            state.PageSize,
            sortLabel,
            sortDirection
        );

        IsLoading = false;
        TrayList = response?.Items?.ToList() ?? new List<TrayDTO>();
        TotalTrayCount = response?.TotalCount ?? 0;

        return new GridData<TrayDTO>
        {
            Items = TrayList,
            TotalItems = TotalTrayCount
        };
    }

    private async Task OnTrayStatusChanged(Guid newStatus)
    {
        SelectedTrayStatus = newStatus;
        await dataGrid.ReloadServerData();
    }
}
