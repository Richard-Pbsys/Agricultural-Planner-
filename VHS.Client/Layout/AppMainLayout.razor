@inherits LayoutComponentBase
@using VHS.Services.Auth
@using VHS.Services.Auth.DTO
@inject IStringLocalizer<Shared> Localizer
@inject LocalStorage LocalStorage
@inject PageTitleService PageTitleService

<MudThemeProvider Theme="AppCustomTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudLink Href="/">
            <MudImage Src="/VHSystems_logo.png" Alt="VHS Logo" Class="app-logo" />
        </MudLink>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Default" Class="mx-14" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.Search" Size="Size.Medium" Color="Color.Default" Class="mx-1" Edge="Edge.End" />
        <MudIconButton Icon="@Icons.Material.Outlined.Notifications" Size="Size.Medium" Color="Color.Default" Class="mx-1" Edge="Edge.End" />
        <AuthUser />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <AppNavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mt-8 mb-8 px-8" MaxWidth="MaxWidth.False">
            <MudText Typo="Typo.h4" Class="page-title pb-8" Color="Color.Primary">@PageTitleService.Title</MudText>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private List<BreadcrumbItem> BreadcrumbItems = new()
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("Dashboard", href: "/dashboard"),
    };

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        await SetCultureFromLocalStorageAsync();
        PageTitleService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        PageTitleService.OnChange -= StateHasChanged;
    }

    private async Task SetCultureFromLocalStorageAsync()
    {
        var settingsJson = await LocalStorage.GetStateAsync("VHS_USER_SETTINGS");
        string language = "en-US";

        if (!string.IsNullOrWhiteSpace(settingsJson))
        {
            var settings = System.Text.Json.JsonSerializer.Deserialize<UserSettingDTO>(settingsJson);
            if (settings != null && !string.IsNullOrWhiteSpace(settings.PreferredLanguage))
            {
                language = settings.PreferredLanguage;
            }
        }

        var culture = new CultureInfo(language);
        CultureInfo.DefaultThreadCurrentCulture = culture;
        CultureInfo.DefaultThreadCurrentUICulture = culture;
    }

    MudTheme AppCustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Background = "#f6f7fb",
            Surface = "#FFFFFF",
            AppbarBackground = "#FFFFFF",
            AppbarText = "#171717",
            DrawerBackground = "#FFFFFF",
            DrawerText = "#525b75",

            Primary = "#f37123",
            Secondary = "#31374a",
            Success = "#25b003",
            Info = "#0097eb",
            Warning = "#e5780b",
            Error = "#fa3b1d",
            Dark = "#141824"
        },
        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "254px"
        },
        Typography = new Typography()
        {
            Default = new DefaultTypography()
            {
                FontFamily = new[] { "Montserrat", "Helvetica", "Arial", "sans-serif" }
            }
        }
    };
}
